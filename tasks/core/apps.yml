---

# Read all apps shipped by Nextcloud itself
- name: Read shipped apps
  command: ./occ app:list --shipped=true --output=json
  args:
    chdir: "{{ nextcloud_installation_dir }}"
  become: true
  become_user: "{{ nextcloud_file_owner }}"
  register: nextcloud_shipped_apps
  changed_when: false

- name: Remove non-json text from command output
  set_fact:
    nextcloud_shipped_apps: >-
      {{
        nextcloud_shipped_apps.stdout[
          (nextcloud_shipped_apps.stdout.find('{')):
        ]
      }}

# Read all external apps which have been installed by in addition
- name: Read installed external apps
  command: ./occ app:list --shipped=false --output=json
  args:
    chdir: "{{ nextcloud_installation_dir }}"
  become: true
  become_user: "{{ nextcloud_file_owner }}"
  register: nextcloud_installed_apps
  changed_when: false

- name: Remove non-json text from command output
  set_fact:
    nextcloud_installed_apps: >-
      {{
        nextcloud_installed_apps.stdout[
          (nextcloud_installed_apps.stdout.find('{')):
        ]
      }}

- name: Install external apps
  command: php occ app:install "{{ item.name }}"
  with_items: "{{ nextcloud_apps }}"
  become_user: "{{ nextcloud_file_owner }}"
  args:
    chdir: "{{ nextcloud_installation_dir }}"
  register: result
  failed_when: result.stdout is not search('installed') or result is failed
  changed_when: result is not failed
  when: >-
    nextcloud_version >= 13 and
    item.name not in (nextcloud_installed_apps.enabled
    | combine(nextcloud_installed_apps.disabled))

- name: Update external apps
  command: php occ app:update "{{ item }}"
  with_items: "{{ (nextcloud_installed_apps.enabled
    | combine(nextcloud_installed_apps.disabled)) }}"
  become_user: "{{ nextcloud_file_owner }}"
  args:
    chdir: "{{ nextcloud_installation_dir }}"
  register: result
  failed_when: result.stdout is search('not installed') or result is failed
  changed_when: result.stdout is search('updated') and result is not failed
  when: nextcloud_version >= 13

- name: Enable apps
  command: ./occ app:enable "{{ item.name }}"
  args:
    chdir: "{{ nextcloud_installation_dir }}"
  become: true
  become_user: "{{ nextcloud_file_owner }}"
  with_items: "{{ nextcloud_apps }}"
  when: item.name not in nextcloud_installed_apps.enabled

- name: Re-read installed external apps
  command: ./occ app:list --shipped=false --output=json
  args:
    chdir: "{{ nextcloud_installation_dir }}"
  become: true
  become_user: "{{ nextcloud_file_owner }}"
  register: nextcloud_installed_apps
  changed_when: false

- name: Remove non-json text from command output
  set_fact:
    nextcloud_installed_apps: >-
      {{
        nextcloud_installed_apps.stdout[
          (nextcloud_installed_apps.stdout.find('{')):
        ]
      }}
