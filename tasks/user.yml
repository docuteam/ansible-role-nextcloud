---

- name: Get users info
  command: php occ user:info "{{ item.name }}" --output=json
  args:
    chdir: "{{ nextcloud_installation_dir }}"
  failed_when: false
  changed_when: false
  register: nextcloud_online_users
  with_items: "{{ nextcloud_users }}"
  become_user: "{{ nextcloud_file_owner }}"

# There might be a notice for required updates. This notice will break json
# parsing.
- name: Remove non-json text from command output
  set_fact:
    nextcloud_online_users: >-
      {{
        nextcloud_online_users.results
        | map(attribute='stdout')
        | map('regex_replace', "^[^{]*(.*)$", '\1')
        | map('from_json')
        | list
      }}

- name: Create users
  command: >-
    php occ user:add
      "{{ item.name }}"
      --display-name "{{ item.display_name }}"
      --password-from-env
  args:
    chdir: "{{ nextcloud_installation_dir }}"
  when: >-
    nextcloud_online_users
    | selectattr('display_name', 'eq', item.name)
    | list
    | length == 0
  become_user: "{{ nextcloud_file_owner }}"
  environment:
    OC_PASS: "{{ item.pass }}"
  with_items: "{{ nextcloud_users }}"

- name: Update user password
  command: php occ user:resetpassword "{{ item.name }}" --password-from-env
  args:
    chdir: "{{ nextcloud_installation_dir }}"
  when:
    - item.resetpassword | default(False)
    - nextcloud_online_users
      | selectattr('display_name', 'eq', item.name)
      | list
      | length > 0
  become_user: "{{ nextcloud_file_owner }}"
  environment:
    OC_PASS: "{{ item.pass }}"
  with_items: "{{ nextcloud_users }}"

